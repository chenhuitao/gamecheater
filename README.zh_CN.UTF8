  休息不好就不可能工作好，偶尔打打游戏，可是GNU/Linux下游戏真是少啊。

  这一阵子在用dosbox玩一些老游戏，没有修改器玩的真是辛苦。怎么原来的游戏大多要练级？ 不爽！
郁闷。。。。。。 于是写了一个修改器，帮助我迅速通关。哈哈。 ^_^

  这个修改器还很初级，没有什么人性化的设计。 我想没有帮助也能使用吧。先选择你要修改的进程，双击
对应的列。在新的对话框里输入你要查找的数据类型和数值。在数值输入框上按回车开始搜索。状态栏会报告
有多少命中的数据。但是只显示前面8个地址。重复搜索后找到你希望更改的地址后双击填入新的数值。好运。

   由于我对GTK＋的了解不是非常深入，也是为了图快，都用GtkTreeView来显示数值，没有设计什么
对象，结构之类的。如果你有好的建议，可以给我 email，告诉我，我尽量改进。或者你写了一个更好的，
那么请告诉我，我也要用。

  数据类型是要查找的数据在机器中的长度，都是无符号的整数，浮点数（游戏中很少用）暂时还不支持。
如果是32－bit机器，64位查找暂时没弄（用64位数的游戏数据也不多）。这个查找也不是全内存搜索，
它读取/proc/pid/maps文件，只搜索可读写的部分，另外库文件的内存和设备文件的内存不扫描。扫描
时按照数据类型来处理。如果是uint16，就两个字节（一个字节8－bit，char类型）两个字节的扫描。
如果你要找的数据是以奇地址开始的，那么很不幸的将被略过。一个十六位的数据存在奇数地址上，这种情
况非常少。还有如果是模拟器游戏，可能模拟的CPU数据字节位序和你的机器不一样。我的X86是
little-endian，如果模拟器的存储是big-endian。那么大于8－bit的内存表示的数值是不同解释的。

  修改器还很弱，如果你找不到数据的话，请先检查数据类型是否选择正确，一般只有DOS游戏是16位的，
现在以32位为主，8位的更少了。然后判断是否是浮点数？是的话就不要用这个程序来改了。如果是模拟器
游戏，你知道字节位序和你的机器不一样，你可以把数值变成16进制表示，按uint8来搜索其中一个字节，
找到的话再用内存编辑修改对应地址的内容，对以上描述不清楚的不要使用这种方法。

  编辑内存的时候要小心。由于用字符串来显示内存，回写的时候我没有限制输入，如果格式不是两个十六
进制字符一组，中间有空格的话，那么更新到内存中的数据肯定不是你希望的。小心！小心！以防万一，
存档先。还是一次只查找一个数据，用对话框更新比较安全。

  我的邮箱是h980501427@hotmail.com，欢迎来信指导。不过上网对我来说现在还不是很随意。惨啊！
如不能及时回复，请见谅。
